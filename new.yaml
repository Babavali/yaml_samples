openapi: 3.0.1
info:
  title: E-Commerce Platform
  description: APIs for managing merchants, products, orders, and payments.
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/BIAN-3/BIAN/ECommerce/1.0.0
paths:
  # Merchant Endpoints
  '/ECommerce/{ecommerceid}/Merchant/Initiate':
    post:
      tags:
        - CR - Merchant
      summary: Initialize merchant account
      description: Initialize merchant account
      operationId: InitiateMerchant
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateMerchantRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateMerchantResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommerce/{ecommerceid}/getMerchant/Retrieve':
    get:
      tags:
        - CR - Merchant
      summary: Retrieve merchant details
      description: Retrieve merchant details
      operationId: RetrieveMerchant
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMerchantResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Product Endpoints


  # Order Endpoints
  '/ECommerce/{ecommerceid}/Order/Initiate':
    post:
      tags:
        - CR - Order
      summary: Initialize order
      description: Initialize order
      operationId: InitiateOrder
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommerce/{ecommerceid}/getOrder/Retrieve':
    get:
      tags:
        - CR - Order
      summary: Retrieve orders
      description: Retrieve orders
      operationId: RetrieveOrders
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveOrdersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Payment Endpoints
  '/ECommerce/{ecommerceid}/Payment/Initiate':
    post:
      tags:
        - CR - Payment
      summary: Initialize payment
      description: Initialize payment
      operationId: InitiatePayment
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiatePaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommerce/{ecommerceid}/getPayment/Retrieve':
    get:
      tags:
        - CR - Payment
      summary: Retrieve payments
      description: Retrieve payments
      operationId: RetrievePayments
      parameters:
        - $ref: '#/components/parameters/ecommerceid'
      responses:
        '200':
          $ref: '#/components/responses/RetrievePaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'


components:
  schemas:
    # Core Objects
    ECommerceFacility:
      type: object
      properties:
        ECommerceInstanceReference:
          type: string
          description: Reference to the e-commerce instance
        ECommercePlatformName:
          type: string
          description: Name of the e-commerce platform
        MerchantReference:
          type: string
          description: Reference to the merchant
        ProductReference:
          type: string
          description: Reference to the product
        OrderReference:
          type: string
          description: Reference to the order
        PaymentReference:
          type: string
          description: Reference to the payment

    # Entity Objects
    Merchant:
      type: object
      properties:
        MerchantName:
          type: string
          description: Name of the merchant
        MerchantTaxID:
          type: string
          description: Tax ID of the merchant
        MerchantStatus:
          type: string
          description: Status of the merchant
          enum: [Active, Inactive, Suspended]

    Product:
      type: object
      properties:
        ProductName:
          type: string
          description: Name of the product
        ProductPrice:
          type: string
          description: Price of the product
        ProductCurrency:
          type: string
          description: Currency of the product price

    Order:
      type: object
      properties:
        OrderAmount:
          type: string
          description: Amount of the order
        OrderCurrency:
          type: string
          description: Currency of the order
        OrderStatus:
          type: string
          description: Status of the order
          enum: [Pending, Paid, Shipped, Delivered]

    Payment:
      type: object
      properties:
        PaymentAmount:
          type: string
          description: Amount of the payment
        PaymentMethod:
          type: string
          description: Method of payment
          enum: [CreditCard, PayPal, BankTransfer]
        PaymentStatus:
          type: string
          description: Status of the payment
          enum: [Pending, Completed, Failed]

    MerchantPayout:
      type: object
      properties:
        PayoutAmount:
          type: string
          description: Amount of the payout
        PayoutMethod:
          type: string
          description: Method of payout
          enum: [BankTransfer, PayPal]
        PayoutStatus:
          type: string
          description: Status of the payout
          enum: [Pending, Completed, Failed]

    # Response Objects
    ECommerceFacilityResponse:
      type: object
      properties:
        TransactionReference:
          type: string
          description: Reference for the transaction
        Status:
          type: string
          description: Status of the operation

    # Request Objects
    InitiateMerchantRequest:
      type: object
      properties:
        Merchant:
          $ref: '#/components/schemas/Merchant'

    InitiateProductRequest:
      type: object
      properties:
        Product:
          $ref: '#/components/schemas/Product'

    InitiateOrderRequest:
      type: object
      properties:
        Order:
          $ref: '#/components/schemas/Order'

    InitiatePaymentRequest:
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Payment'

    InitiateMerchantPayoutRequest:
      type: object
      properties:
        MerchantPayout:
          $ref: '#/components/schemas/MerchantPayout'

    # Response Collections
    RetrieveOrdersResponse:
      type: object
      properties:
        Orders:
          $ref: '#/components/schemas/Order'

    RetrievePaymentsResponse:
      type: object
      properties:
        Payments:
          $ref: '#/components/schemas/Payment'

    RetrieveMerchantResponse:
      type: object
      properties:
        Merchant:
          $ref: '#/components/schemas/Merchant'

    # Error Response
    HTTPError:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: integer
          description: HTTP status code
        details:
          type: string
          description: Additional error details

  # Request Bodies
  requestBodies:
    InitiateMerchantRequest:
      description: Request to initialize a merchant account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateMerchantRequest'
      required: true

    InitiateProductRequest:
      description: Request to initialize a product listing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductRequest'
      required: true

    InitiateOrderRequest:
      description: Request to initialize an order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderRequest'
      required: true

    InitiatePaymentRequest:
      description: Request to initialize a payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentRequest'
      required: true

    InitiateMerchantPayoutRequest:
      description: Request to initialize a merchant payout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateMerchantPayoutRequest'
      required: true

  # Responses
  responses:
    InitiateMerchantResponse:
      description: Response for merchant initialization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECommerceFacilityResponse'

    InitiateProductResponse:
      description: Response for product initialization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECommerceFacilityResponse'

    InitiateOrderResponse:
      description: Response for order initialization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECommerceFacilityResponse'

    InitiatePaymentResponse:
      description: Response for payment initialization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECommerceFacilityResponse'

    InitiateMerchantPayoutResponse:
      description: Response for merchant payout initialization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ECommerceFacilityResponse'

    RetrieveOrdersResponse:
      description: Response containing list of orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveOrdersResponse'

    RetrievePaymentsResponse:
      description: Response containing list of payments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrievePaymentsResponse'

    RetrieveMerchantResponse:
      description: Response containing merchant details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveMerchantResponse'

    # Standard Error Responses
    BadRequest:
      description: Bad request error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    Unauthorized:
      description: Unauthorized error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    Forbidden:
      description: Forbidden error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    NotFound:
      description: Not found error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    TooManyRequests:
      description: Too many requests error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    InternalServerError:
      description: Internal server error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

  # Parameters
  parameters:
    ecommerceid:
      name: ecommerceid
      in: path
      required: true
      description: ID of the e-commerce platform instance
      schema:
        type: string
