openapi: 3.0.1
info:
  title: eCommerce
  description: APIs for managing merchants, products, orders, and payments.
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/BIAN-3/BIAN/ECommerce/1.0.0
paths:
  '/eCommerce/Merchant/Initiate':
    post:
      tags: [CR - Merchant]
      summary: Initialize merchant account
      description: Initialize merchant account
      operationId: InitiateMerchant
      requestBody:
        $ref: '#/components/requestBodies/InitiateMerchantRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateMerchantResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/getMerchant/Retrieve':
    get:
      tags: [CR - Merchant]
      summary: Retrieve merchant details
      description: Retrieve merchant details
      operationId: RetrieveMerchant
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMerchantResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/Product/Initiate':
    post:
      tags: [CR - Product]
      summary: Initialize product listing
      description: Initialize product listing
      operationId: InitiateProduct
      requestBody:
        $ref: '#/components/requestBodies/InitiateProductRequest'
      responses:
        '200': 
          $ref: '#/components/responses/InitiateProductResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/getProduct/Retrieve':
    get:
      tags: [CR - Product]
      summary: Retrieve products
      description: Retrieve products
      operationId: RetrieveProduct
      responses:
        '200': 
          $ref: '#/components/responses/RetrieveProductResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/Order/Initiate':
    post:
      tags: [CR - Order]
      summary: Initialize order
      description: Initialize order
      operationId: InitiateOrder
      requestBody:
        $ref: '#/components/requestBodies/InitiateOrderRequest'
      responses:
        '200': 
          $ref: '#/components/responses/InitiateOrderResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/getOrder/Retrieve':
    get:
      tags: [CR - Order]
      summary: Retrieve orders
      description: Retrieve orders
      operationId: RetrieveOrder
      responses:
        '200': 
          $ref: '#/components/responses/RetrieveOrderResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/Payment/Initiate':
    post:
      tags: [CR - Payment]
      summary: Initialize payment
      description: Initialize payment
      operationId: InitiatePayment
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentRequest'
      responses:
        '200': 
          $ref: '#/components/responses/InitiatePaymentResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/getPayment/Retrieve':
    get:
      tags: [CR - Payment]
      summary: Retrieve payments
      description: Retrieve payments
      operationId: RetrievePayment
      responses:
        '200': 
          $ref: '#/components/responses/RetrievePaymentResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/MerchantPayout/Initiate':
    post:
      tags: [CR - MerchantPayout]
      summary: Initialize merchant payout
      description: Initialize merchant payout
      operationId: InitiateMerchantPayout
      requestBody:
        $ref: '#/components/requestBodies/InitiateMerchantPayoutRequest'
      responses:
        '200': 
          $ref: '#/components/responses/InitiateMerchantPayoutResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
  '/eCommerce/getMerchantPayout/Retrieve':
    get:
      tags: [CR - MerchantPayout]
      summary: Retrieve merchant payouts
      description: Retrieve merchant payouts
      operationId: RetrieveMerchantPayout
      responses:
        '200': 
          $ref: '#/components/responses/RetrieveMerchantPayoutResponse'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403': 
          $ref: '#/components/responses/Forbidden'
        '404': 
          $ref: '#/components/responses/NotFound'
        '429': 
          $ref: '#/components/responses/TooManyRequests'
        '500': 
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Merchant:
      type: object
      properties:
        merchantName:
          type: string
          format: string
          description: Name of the merchant
        merchantTaxId:
          type: string
          format: string
          description: Tax ID of the merchant
        merchantStatus:
          type: string
          format: string
          description: Status of the merchant
        merchantAddress:
          type: string
          format: string
          description: Physical address of the merchant
        merchantEmail:
          type: string
          format: email
          description: Contact email of the merchant
        merchantPhone:
          type: string
          format: string
          description: Contact phone number of the merchant
        merchantRegistrationDate:
          type: string
          format: date-time
          description: Date when merchant registered on the platform
    Product:
      type: object
      properties:
        productName:
          type: string
          format: string
          description: Name of the product
        productPrice:
          type: number
          format: float
          description: Price of the product
        productCurrency:
          type: string
          format: string
          description: Currency of the product price
        productCategory:
          type: string
          format: string
          description: Category of the product
        productStock:
          type: integer
          format: int32
          description: Current stock quantity of the product
        productDescription:
          type: string
          format: string
          description: Detailed description of the product
        productSku:
          type: string
          format: string
          description: Stock Keeping Unit identifier for the product
    Order:
      type: object
      properties:
        orderAmount:
          type: number
          format: float
          description: Amount of the order
        orderCurrency:
          type: string
          format: string
          description: Currency of the order
        orderStatus:
          type: string
          format: string
          description: Status of the order
        orderDate:
          type: string
          format: date-time
          description: Date when order was placed
        customerName:
          type: string
          format: string
          description: Name of the customer who placed the order
        shippingAddress:
          type: string
          format: string
          description: Address where order should be shipped
    Payment:
      type: object
      properties:
        paymentAmount:
          type: number
          format: float
          description: Amount of the payment
        paymentMethod:
          type: string
          format: string
          description: Method of payment
          enum: [CreditCard, PayPal, BankTransfer]
        paymentStatus:
          type: string
          format: string
          description: Status of the payment
        paymentDate:
          type: string
          format: date-time
          description: Date when payment was processed
        paymentTransactionId:
          type: string
          format: string
          description: Unique transaction identifier from payment processor
        paymentCurrency:
          type: string
          format: string
          description: Currency of the payment
        paymentFee:
          type: number
          format: float
          description: Processing fee charged for the payment
    MerchantPayout:
      type: object
      properties:
        payoutAmount:
          type: number
          format: float
          description: Amount of the payout
        payoutMethod:
          type: string
          format: string
          description: Method of payout
        payoutStatus:
          type: string
          format: string
          description: Status of the payout
        payoutDate:
          type: string
          format: date-time
          description: Date when payout was initiated
        payoutReference:
          type: string
          format: string
          description: Reference number for the payout transaction
        payoutCurrency:
          type: string
          format: string
          description: Currency of the payout
        payoutFee:
          type: number
          format: float
          description: Processing fee deducted from the payout
    InitiateMerchantRequest:
      type: object
      properties:
        merchant: 
          $ref: '#/components/schemas/Merchant'
    InitiateProductRequest:
      type: object
      properties:
        product: 
          $ref: '#/components/schemas/Product'
    InitiateOrderRequest:
      type: object
      properties:
        order: 
          $ref: '#/components/schemas/Order'
    InitiatePaymentRequest:
      type: object
      properties:
        payment: 
          $ref: '#/components/schemas/Payment'
    InitiateMerchantPayoutRequest:
      type: object
      properties:
        merchantPayout: 
          $ref: '#/components/schemas/MerchantPayout'
    RetrieveMerchantResponse:
      type: object
      properties:
        merchant: 
          $ref: '#/components/schemas/Merchant'
    RetrieveProductResponse:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
    RetrieveOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
    RetrievePaymentResponse:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    RetrieveMerchantPayoutResponse:
      type: object
      properties:
        merchantPayout:
          $ref: '#/components/schemas/MerchantPayout'
    HTTPError:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: integer
          format: int32
          description: HTTP status code
        details:
          type: string
          description: Additional error details
  requestBodies:
    InitiateMerchantRequest:
      description: Request to initialize a merchant account
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/InitiateMerchantRequest'
      required: true
    InitiateProductRequest:
      description: Request to initialize a product listing
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/InitiateProductRequest'
      required: true
    InitiateOrderRequest:
      description: Request to initialize an order
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/InitiateOrderRequest'
      required: true
    InitiatePaymentRequest:
      description: Request to initialize a payment
      content:
        application/json:
          schema:   
            $ref: '#/components/schemas/InitiatePaymentRequest'
      required: true
    InitiateMerchantPayoutRequest:
      description: Request to initialize a merchant payout
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/InitiateMerchantPayoutRequest'
      required: true
  responses:
    InitiateMerchantResponse:
      description: Response for merchant initialization
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveMerchantResponse'
    InitiateProductResponse:
      description: Response for product initialization
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveProductResponse'
    InitiateOrderResponse:
      description: Response for order initialization
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/RetrieveOrderResponse'
    InitiatePaymentResponse:
      description: Response for payment initialization
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrievePaymentResponse'
    InitiateMerchantPayoutResponse:
      description: Response for merchant payout initialization
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveMerchantPayoutResponse'
    RetrieveMerchantResponse:
      description: Response containing merchant details
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveMerchantResponse'
    RetrieveProductResponse:
      description: Response containing list of products
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveProductResponse'
    RetrieveOrderResponse:
      description: Response containing list of orders
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveOrderResponse'
    RetrievePaymentResponse:
      description: Response containing list of payments
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrievePaymentResponse'
    RetrieveMerchantPayoutResponse:
      description: Response containing list of merchant payouts
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/RetrieveMerchantPayoutResponse'
    BadRequest:
      description: Bad request error response
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized error response
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden error response
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: Not found error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: Too many requests error response
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal server error response
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/HTTPError'
