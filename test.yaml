openapi: 3.0.1
info:
  title: E-Commerce Merchant Platform
  description: 'This service domain orchestrates an e-commerce merchant platform, covering product management, order processing, inventory control, payment processing, and customer management.'
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/BIAN-3/BIAN/ECommercePlatform/11.0.0
paths:
  # Product Management Endpoints
  '/ECommercePlatform/{ecommerceplatformid}/products/Initiate':
    post:
      tags:
        - BQ - ProductManagement
      summary: InBQ Initialize product creation
      description: InBQ Initialize product creation
      operationId: InitiateProduct
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateProductRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateProductResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/products/{productid}/Retrieve':
    get:
      tags:
        - BQ - ProductManagement
      summary: ReBQ Retrieve product details
      description: ReBQ Retrieve product details
      operationId: RetrieveProduct
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
        - $ref: '#/components/parameters/productid'
      responses:
        '200':
          $ref: '#/components/responses/ProductResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  # Order Management Endpoints
  '/ECommercePlatform/{ecommerceplatformid}/orders/Initiate':
    post:
      tags:
        - BQ - OrderManagement
      summary: InBQ Initialize order creation
      description: InBQ Initialize order creation
      operationId: InitiateOrder
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/orders/{orderid}/Retrieve':
    get:
      tags:
        - BQ - OrderManagement
      summary: ReBQ Retrieve order details
      description: ReBQ Retrieve order details
      operationId: RetrieveOrder
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
        - $ref: '#/components/parameters/orderid'
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  # Payment Processing Endpoints
  '/ECommercePlatform/{ecommerceplatformid}/payments/Initiate':
    post:
      tags:
        - BQ - PaymentProcessing
      summary: InBQ Initialize payment processing
      description: InBQ Initialize payment processing
      operationId: InitiatePayment
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiatePaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/payments/{paymentid}/Retrieve':
    get:
      tags:
        - BQ - PaymentProcessing
      summary: ReBQ Retrieve payment details
      description: ReBQ Retrieve payment details
      operationId: RetrievePayment
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
        - $ref: '#/components/parameters/paymentid'
      responses:
        '200':
          $ref: '#/components/responses/PaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    ECommercePlatformFacility:
      type: object
      properties:
        PlatformInstanceReference:
          type: string
          description: "\n"
          format: object
        MerchantReference:
          type: string
          description: "\n"
          format: object
        Currency:
          type: string
          description: "\n"
          format: string
        PlatformType:
          type: string
          description: "\n"
          format: string
          enum:
            - Retail
            - Marketplace
            - Subscription

    Product:
      type: object
      properties:
        ProductReference:
          type: string
          description: "\n"
          format: string
        ProductName:
          type: string
          description: "\n"
          format: string
        ProductDescription:
          type: string
          description: "\n"
          format: string
        ProductPrice:
          type: string
          description: "\n"
          format: string
        ProductStatus:
          type: string
          description: "\n"
          format: string
          enum: [active, inactive, archived]
        CreatedDate:
          type: string
          description: "\n"
          format: date-time

    Order:
      type: object
      properties:
        OrderReference:
          type: string
          description: "\n"
          format: string
        OrderStatus:
          type: string
          description: "\n"
          format: string
          enum: [pending, processing, shipped, delivered, cancelled, refunded]
        OrderAmount:
          type: string
          description: "\n"
          format: string
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        CreatedDate:
          type: string
          description: "\n"
          format: date-time

    OrderItem:
      type: object
      properties:
        ProductReference:
          type: string
          description: "\n"
          format: string
        Quantity:
          type: string
          description: "\n"
          format: string
        Price:
          type: string
          description: "\n"
          format: string

    Payment:
      type: object
      properties:
        PaymentReference:
          type: string
          description: "\n"
          format: string
        PaymentStatus:
          type: string
          description: "\n"
          format: string
          enum: [pending, completed, failed, refunded]
        PaymentAmount:
          type: string
          description: "\n"
          format: string
        PaymentMethod:
          type: string
          description: "\n"
          format: string
        CreatedDate:
          type: string
          description: "\n"
          format: date-time

    ECommercePlatformFacilityResponse:
      type: object
      properties:
        TransactionReference:
          type: string
          description: "\n"
          format: string
        PlatformStatus:
          type: string
          description: "\n"
          format: string

    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: "\n"
          format: string
        status:
          type: string
          description: "\n"
          format: string
        message:
          type: string
          description: "\n"
          format: string

    InitiateProductResponse:
      type: object
      properties:
        ECommercePlatformFacilityResponse:
          $ref: '#/components/schemas/ECommercePlatformFacilityResponse'
        Product:
          $ref: '#/components/schemas/Product'

    ProductResponse:
      type: object
      properties:
        Product:
          $ref: '#/components/schemas/Product'

    InitiateOrderResponse:
      type: object
      properties:
        ECommercePlatformFacilityResponse:
          $ref: '#/components/schemas/ECommercePlatformFacilityResponse'
        Order:
          $ref: '#/components/schemas/Order'

    OrderResponse:
      type: object
      properties:
        Order:
          $ref: '#/components/schemas/Order'

    InitiatePaymentResponse:
      type: object
      properties:
        ECommercePlatformFacilityResponse:
          $ref: '#/components/schemas/ECommercePlatformFacilityResponse'
        Payment:
          $ref: '#/components/schemas/Payment'

    PaymentResponse:
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Payment'

    InitiateProductRequest:
      type: object
      properties:
        ECommercePlatformFacility:
          $ref: '#/components/schemas/ECommercePlatformFacility'
        Product:
          $ref: '#/components/schemas/Product'

    InitiateOrderRequest:
      type: object
      properties:
        ECommercePlatformFacility:
          $ref: '#/components/schemas/ECommercePlatformFacility'
        Order:
          $ref: '#/components/schemas/Order'

    InitiatePaymentRequest:
      type: object
      properties:
        ECommercePlatformFacility:
          $ref: '#/components/schemas/ECommercePlatformFacility'
        Payment:
          $ref: '#/components/schemas/Payment'

  requestBodies:
    InitiateProductRequest:
      description: InitiateProduct
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductRequest'
      required: true

    InitiateOrderRequest:
      description: InitiateOrder
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderRequest'
      required: true

    InitiatePaymentRequest:
      description: InitiatePayment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentRequest'
      required: true

  responses:
    InitiateProductResponse:
      description: Product initiated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductResponse'

    ProductResponse:
      description: Product retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductResponse'

    InitiateOrderResponse:
      description: Order initiated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderResponse'

    OrderResponse:
      description: Order retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderResponse'

    InitiatePaymentResponse:
      description: Payment initiated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentResponse'

    PaymentResponse:
      description: Payment retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentResponse'

    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

  parameters:
    ecommerceplatformid:
      name: ecommerceplatformid
      in: path
      required: true
      style: simple
      schema:
        type: string

    productid:
      name: productid
      in: path
      required: true
      style: simple
      schema:
        type: string

    orderid:
      name: orderid
      in: path
      required: true
      style: simple
      schema:
        type: string

    paymentid:
      name: paymentid
      in: path
      required: true
      style: simple
      schema:
        type: string
