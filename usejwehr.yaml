openapi: 3.0.1
info:
  title: Users Management API
  description: "This service domain manages user information and their associated microservices"
  version: 1.0.0
servers:
  - url: https://dev.aairavx.com/api
paths:
  "/users/Retrieve":
    get:
      tags:
        - Users
      summary: Retrieve user information
      description: Retrieve details about users including their microservices and API information
      operationId: retrieveUsers
      parameters:
        - name: Microservices
          in: query
          description: Filter by microservices
          required: false
          schema:
            type: string
        - name: createdOn
          in: query
          description: Filter by creation date
          required: false
          schema:
            type: string
            format: date
        - name: NoOfAPIs
          in: query
          description: Filter by number of APIs
          required: false
          schema:
            type: integer
        - name: Status
          in: query
          description: Filter by status
          required: false
          schema:
            type: string
            enum:
              - Active
              - Inactive
              - Pending
      responses:
        "200":
          description: Successful retrieval of user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the user
        name:
          type: string
          description: Name of the user
        email:
          type: string
          description: Email address of the user
          format: email
        microservices:
          type: array
          items:
            type: string
          description: List of microservices associated with the user
        createdOn:
          type: string
          format: date
          description: Date when the user was created
        noOfAPIs:
          type: integer
          description: Number of APIs associated with the user
        status:
          type: string
          enum:
            - Active
            - Inactive
            - Pending
          description: Current status of the user account

    UsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
        totalCount:
          type: integer
          description: Total number of users matching the criteria

    HTTPError:
      type: object
      properties:
        status_code:
          type: integer
          description: HTTP status code
        status:
          type: string
          description: Status message
        message:
          type: string
          description: Detailed error message

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPError"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPError"
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPError"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HTTPError"
