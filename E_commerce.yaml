openapi: 3.0.1
info:
  title: E-Commerce Merchant Platform
  description: 'This service domain orchestrates an e-commerce merchant platform, covering product management, order processing, inventory control, payment processing, and customer management.'
  version: 11.0.0
servers:
  - url: https://virtserver.swaggerhub.com/BIAN-3/BIAN/ECommercePlatform/11.0.0
paths:
  '/ECommercePlatform/{ecommerceplatformid}/products/Initiate':
    post:
      tags:
        - BQ - ProductManagement
      summary: InBQ Initialize product creation
      description: InBQ Initialize product creation
      operationId: InitiateProduct
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateProductRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateProductResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/getProducts/Retrieve':
    get:
      tags:
        - BQ - ProductManagement
      summary: ReBQ Retrieve details about all products
      description: ReBQ Retrieve details about all products
      operationId: RetrieveAllProducts
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveProductsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/orders/Initiate':
    post:
      tags:
        - BQ - OrderManagement
      summary: InBQ Initialize order creation
      description: InBQ Initialize order creation
      operationId: InitiateOrder
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      requestBody:
        $ref: '#/components/requestBodies/InitiateOrderRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

  '/ECommercePlatform/{ecommerceplatformid}/getOrders/Retrieve':
    get:
      tags:
        - BQ - OrderManagement
      summary: ReBQ Retrieve details about all orders
      description: ReBQ Retrieve details about all orders
      operationId: RetrieveAllOrders
      parameters:
        - $ref: '#/components/parameters/ecommerceplatformid'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveOrdersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Products:
      type: array
      items:
        type: object
        properties:
          ProductReference:
            type: string
            description: "\n"
            format: string
          ProductName:
            type: string
            description: "\n"
            format: string
          ProductDescription:
            type: string
            description: "\n"
            format: string
          ProductPrice:
            type: string
            description: "\n"
            format: string
          ProductStatus:
            type: string
            description: "\n"
            format: string
          CreatedDate:
            type: string
            description: "\n"
            format: string

    Orders:
      type: array
      items:
        type: object
        properties:
          OrderReference:
            type: string
            description: "\n"
            format: string
          OrderStatus:
            type: string
            description: "\n"
            format: string
          OrderAmount:
            type: string
            description: "\n"
            format: string
          OrderDate:
            type: string
            description: "\n"
            format: string
          CustomerReference:
            type: string
            description: "\n"
            format: string

    HTTPError:
      type: object
      properties:
        status_code:
          type: string
          description: "\n"
          format: string
        status:
          type: string
          description: "\n"
          format: string
        message:
          type: string
          description: "\n"
          format: string
    InitiateProductRequest:
      type: object
      properties:
        Products:
          $ref: '#/components/schemas/Products'
          
    InitiateProductResponse:
      type: object
      properties:
        Products:
          $ref: '#/components/schemas/Products'
          
    InitiateOrderResponse:
      type: object
      properties:
        Products:
          $ref: '#/components/schemas/Orders'
          
    InitiateOrderRequest:
      type: object
      properties:
        Products:
          $ref: '#/components/schemas/Orders'
    RetrieveProductsResponse:
      type: object
      properties:
        Products:
          $ref: '#/components/schemas/Products'

    RetrieveOrdersResponse:
      type: object
      properties:
        Orders:
          $ref: '#/components/schemas/Orders'

  requestBodies:
    InitiateProductRequest:
      description: InitiateProduct
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductRequest'
      required: true

    InitiateOrderRequest:
      description: InitiateOrder
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderRequest'
      required: true

  responses:
    InitiateProductResponse:
      description: Product initiated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateProductResponse'

    InitiateOrderResponse:
      description: Order initiated successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOrderResponse'

    RetrieveProductsResponse:
      description: Products retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveProductsResponse'

    RetrieveOrdersResponse:
      description: Orders retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveOrdersResponse'

    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'

  parameters:
    ecommerceplatformid:
      name: ecommerceplatformid
      in: path
      required: true
      style: simple
      schema:
        type: string

    productmanagementid:
      name: productmanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string

    ordermanagementid:
      name: ordermanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string

    inventorymanagementid:
      name: inventorymanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string

    paymentprocessingid:
      name: paymentprocessingid
      in: path
      required: true
      style: simple
      schema:
        type: string

    customermanagementid:
      name: customermanagementid
      in: path
      required: true
      style: simple
      schema:
        type: string
